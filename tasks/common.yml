---
# vim: set ft=ansible:

- name: "Wait for {{ baremetal_provider }} instance to come online..."
  wait_for_connection:
    timeout: 300

- name: Check system matches requirements
  assert:
    that:
      - ansible_memtotal_mb >= 100000
      - ansible_facts['os_family'] == 'RedHat'
      - ansible_facts['distribution_major_version'] == '8'

- name: Prepare libvirt images storage VG
  lvg:
    vg: vg.libvirt
    pvs: /dev/nvme0n1,/dev/nvme1n1
  when: baremetal_provider == 'packet' or baremetal_provider == 'equinix_metal'

- name: Prepare libvirt images storage LV
  lvol:
    vg: vg.libvirt
    lv: lvimages
    sire: 100%FREE
    opts: -i 2 -I 4
  when: baremetal_provider == 'packet' or baremetal_provider == 'equinix_metal'

- name: Create filesystem on libvirt storage LV
  filesystem:
    fstype: ext4
    dev: /dev/vg.libvirt/lvimages
  when: baremetal_provider == 'packet' or baremetal_provider == 'equinix_metal'

- name: Install EPEL Repo
  dnf:
    name: epel-release
    state: latest
  become: True

- name: Install required base packages
  dnf:
    name:
      - wget
      - libvirt
      - qemu-kvm
      - virt-manager
      - virt-install
      - libguestfs
      - libguestfs-tools
      - libguestfs-xfs
      - net-tools
      - sshpass
      - virt-what
      - nmap
      - python3-libselinux
    state: latest
  become: True

- name: Upgrade all packages
  dnf:
    name: "*"
    state: latest

- name: mount libvirt images backend storage if needed
  mount:
    path: /var/lib/libvirt/images
    src: /dev/vg.libvirt/lvimages
    fstype: ext4
    state: mounted
  when: baremetal_provider == 'packet' or baremetal_provider == 'equinix_metal'

- name: Enable Libvirt
  ansible.builtin.systemd:
    name: libvirtd
    enabled: yes
    state: started
